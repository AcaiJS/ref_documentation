{
	"PRESENTERS": "Presenters",
	"TEXT_01": "Presenters are part of the `@acai/utils` package and is considered optional.",
	"TEXT_02": "As the name suggests, presenters are used to format and sanitize data that is going to be sent from the request. You can use it to remove certain private fields, create composite fields that do not exist on the model (such as joining first_name and last_name) and keep a standard (wrapping everything in a data object). Presenters are smart enough to know if they are dealing with a single object or an array of them, building a correct pagination from it.",
	"COMMENT_01": "Method called when dealing with a paginated/array response",
	"COMMENT_02": "To use it, simply call",
	"COMMENT_03": "You can pass it an object",
	"COMMENT_04": "Or an array of them",
	"TITLE_01": "Passing extra data",
	"TEXT_03": "If you wish to pass extra data that will reside outside of the data wrap object, you can pass as the second parameter of the present call: `Presenter.present(/* data */, /* extra data outside of data wrap */)`.",
	"TITLE_02": "Extra format options",
	"TEXT_04": "You are not limited to use only one format type per presentation, you actually can have as many as you would like, calling them is super easy too. This is going to force use the new presenter option (it will try to find the custom name + List first) in case of you passing a pagination object. You can checkout in the following code:"
}